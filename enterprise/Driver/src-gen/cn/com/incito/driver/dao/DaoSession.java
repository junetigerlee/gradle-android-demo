package cn.com.incito.driver.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import cn.com.incito.driver.dao.Agent;
import cn.com.incito.driver.dao.Comment;
import cn.com.incito.driver.dao.OrdersAll;
import cn.com.incito.driver.dao.OrdersObligation;
import cn.com.incito.driver.dao.OrdersDistribution;
import cn.com.incito.driver.dao.OrdersSign;
import cn.com.incito.driver.dao.OrdersEvaluated;
import cn.com.incito.driver.dao.OrdersCanceled;
import cn.com.incito.driver.dao.OrdersReimburse;
import cn.com.incito.driver.dao.OrdersReceived;
import cn.com.incito.driver.dao.GoodsAvailable;
import cn.com.incito.driver.dao.GoodsHasAvailable;

import cn.com.incito.driver.dao.AgentDao;
import cn.com.incito.driver.dao.CommentDao;
import cn.com.incito.driver.dao.OrdersAllDao;
import cn.com.incito.driver.dao.OrdersObligationDao;
import cn.com.incito.driver.dao.OrdersDistributionDao;
import cn.com.incito.driver.dao.OrdersSignDao;
import cn.com.incito.driver.dao.OrdersEvaluatedDao;
import cn.com.incito.driver.dao.OrdersCanceledDao;
import cn.com.incito.driver.dao.OrdersReimburseDao;
import cn.com.incito.driver.dao.OrdersReceivedDao;
import cn.com.incito.driver.dao.GoodsAvailableDao;
import cn.com.incito.driver.dao.GoodsHasAvailableDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig agentDaoConfig;
    private final DaoConfig commentDaoConfig;
    private final DaoConfig ordersAllDaoConfig;
    private final DaoConfig ordersObligationDaoConfig;
    private final DaoConfig ordersDistributionDaoConfig;
    private final DaoConfig ordersSignDaoConfig;
    private final DaoConfig ordersEvaluatedDaoConfig;
    private final DaoConfig ordersCanceledDaoConfig;
    private final DaoConfig ordersReimburseDaoConfig;
    private final DaoConfig ordersReceivedDaoConfig;
    private final DaoConfig goodsAvailableDaoConfig;
    private final DaoConfig goodsHasAvailableDaoConfig;

    private final AgentDao agentDao;
    private final CommentDao commentDao;
    private final OrdersAllDao ordersAllDao;
    private final OrdersObligationDao ordersObligationDao;
    private final OrdersDistributionDao ordersDistributionDao;
    private final OrdersSignDao ordersSignDao;
    private final OrdersEvaluatedDao ordersEvaluatedDao;
    private final OrdersCanceledDao ordersCanceledDao;
    private final OrdersReimburseDao ordersReimburseDao;
    private final OrdersReceivedDao ordersReceivedDao;
    private final GoodsAvailableDao goodsAvailableDao;
    private final GoodsHasAvailableDao goodsHasAvailableDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        agentDaoConfig = daoConfigMap.get(AgentDao.class).clone();
        agentDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        ordersAllDaoConfig = daoConfigMap.get(OrdersAllDao.class).clone();
        ordersAllDaoConfig.initIdentityScope(type);

        ordersObligationDaoConfig = daoConfigMap.get(OrdersObligationDao.class).clone();
        ordersObligationDaoConfig.initIdentityScope(type);

        ordersDistributionDaoConfig = daoConfigMap.get(OrdersDistributionDao.class).clone();
        ordersDistributionDaoConfig.initIdentityScope(type);

        ordersSignDaoConfig = daoConfigMap.get(OrdersSignDao.class).clone();
        ordersSignDaoConfig.initIdentityScope(type);

        ordersEvaluatedDaoConfig = daoConfigMap.get(OrdersEvaluatedDao.class).clone();
        ordersEvaluatedDaoConfig.initIdentityScope(type);

        ordersCanceledDaoConfig = daoConfigMap.get(OrdersCanceledDao.class).clone();
        ordersCanceledDaoConfig.initIdentityScope(type);

        ordersReimburseDaoConfig = daoConfigMap.get(OrdersReimburseDao.class).clone();
        ordersReimburseDaoConfig.initIdentityScope(type);

        ordersReceivedDaoConfig = daoConfigMap.get(OrdersReceivedDao.class).clone();
        ordersReceivedDaoConfig.initIdentityScope(type);

        goodsAvailableDaoConfig = daoConfigMap.get(GoodsAvailableDao.class).clone();
        goodsAvailableDaoConfig.initIdentityScope(type);

        goodsHasAvailableDaoConfig = daoConfigMap.get(GoodsHasAvailableDao.class).clone();
        goodsHasAvailableDaoConfig.initIdentityScope(type);

        agentDao = new AgentDao(agentDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);
        ordersAllDao = new OrdersAllDao(ordersAllDaoConfig, this);
        ordersObligationDao = new OrdersObligationDao(ordersObligationDaoConfig, this);
        ordersDistributionDao = new OrdersDistributionDao(ordersDistributionDaoConfig, this);
        ordersSignDao = new OrdersSignDao(ordersSignDaoConfig, this);
        ordersEvaluatedDao = new OrdersEvaluatedDao(ordersEvaluatedDaoConfig, this);
        ordersCanceledDao = new OrdersCanceledDao(ordersCanceledDaoConfig, this);
        ordersReimburseDao = new OrdersReimburseDao(ordersReimburseDaoConfig, this);
        ordersReceivedDao = new OrdersReceivedDao(ordersReceivedDaoConfig, this);
        goodsAvailableDao = new GoodsAvailableDao(goodsAvailableDaoConfig, this);
        goodsHasAvailableDao = new GoodsHasAvailableDao(goodsHasAvailableDaoConfig, this);

        registerDao(Agent.class, agentDao);
        registerDao(Comment.class, commentDao);
        registerDao(OrdersAll.class, ordersAllDao);
        registerDao(OrdersObligation.class, ordersObligationDao);
        registerDao(OrdersDistribution.class, ordersDistributionDao);
        registerDao(OrdersSign.class, ordersSignDao);
        registerDao(OrdersEvaluated.class, ordersEvaluatedDao);
        registerDao(OrdersCanceled.class, ordersCanceledDao);
        registerDao(OrdersReimburse.class, ordersReimburseDao);
        registerDao(OrdersReceived.class, ordersReceivedDao);
        registerDao(GoodsAvailable.class, goodsAvailableDao);
        registerDao(GoodsHasAvailable.class, goodsHasAvailableDao);
    }
    
    public void clear() {
        agentDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
        ordersAllDaoConfig.getIdentityScope().clear();
        ordersObligationDaoConfig.getIdentityScope().clear();
        ordersDistributionDaoConfig.getIdentityScope().clear();
        ordersSignDaoConfig.getIdentityScope().clear();
        ordersEvaluatedDaoConfig.getIdentityScope().clear();
        ordersCanceledDaoConfig.getIdentityScope().clear();
        ordersReimburseDaoConfig.getIdentityScope().clear();
        ordersReceivedDaoConfig.getIdentityScope().clear();
        goodsAvailableDaoConfig.getIdentityScope().clear();
        goodsHasAvailableDaoConfig.getIdentityScope().clear();
    }

    public AgentDao getAgentDao() {
        return agentDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public OrdersAllDao getOrdersAllDao() {
        return ordersAllDao;
    }

    public OrdersObligationDao getOrdersObligationDao() {
        return ordersObligationDao;
    }

    public OrdersDistributionDao getOrdersDistributionDao() {
        return ordersDistributionDao;
    }

    public OrdersSignDao getOrdersSignDao() {
        return ordersSignDao;
    }

    public OrdersEvaluatedDao getOrdersEvaluatedDao() {
        return ordersEvaluatedDao;
    }

    public OrdersCanceledDao getOrdersCanceledDao() {
        return ordersCanceledDao;
    }

    public OrdersReimburseDao getOrdersReimburseDao() {
        return ordersReimburseDao;
    }

    public OrdersReceivedDao getOrdersReceivedDao() {
        return ordersReceivedDao;
    }

    public GoodsAvailableDao getGoodsAvailableDao() {
        return goodsAvailableDao;
    }

    public GoodsHasAvailableDao getGoodsHasAvailableDao() {
        return goodsHasAvailableDao;
    }

}
